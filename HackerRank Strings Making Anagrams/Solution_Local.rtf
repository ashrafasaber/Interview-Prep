{\rtf1\ansi\ansicpg1252\cocoartf1671\cocoasubrtf200
{\fonttbl\f0\fnil\fcharset0 Menlo-Bold;\f1\fnil\fcharset0 Menlo-Regular;\f2\fnil\fcharset0 Menlo-Italic;
\f3\fnil\fcharset0 Menlo-BoldItalic;}
{\colortbl;\red255\green255\blue255;\red127\green0\blue85;\red106\green62\blue62;\red42\green0\blue255;
\red0\green0\blue192;\red63\green127\blue95;}
{\*\expandedcolortbl;;\csgenericrgb\c49804\c0\c33333;\csgenericrgb\c41569\c24314\c24314;\csgenericrgb\c16471\c0\c100000;
\csgenericrgb\c0\c0\c75294;\csgenericrgb\c24706\c49804\c37255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\partightenfactor0

\f0\b\fs24 \cf2 package
\f1\b0 \cf0  main;\
\

\f0\b \cf2 import
\f1\b0 \cf0  \ul java.util.ArrayList\ulnone ;\

\f0\b \cf2 import
\f1\b0 \cf0  java.util.HashMap;\

\f0\b \cf2 import
\f1\b0 \cf0  java.util.Map;\
\

\f0\b \cf2 public
\f1\b0 \cf0  
\f0\b \cf2 class
\f1\b0 \cf0  String_Making_Anagrams \{\
\
\
	
\f0\b \cf2 public
\f1\b0 \cf0  
\f0\b \cf2 static
\f1\b0 \cf0  Map<String, Integer> myStri(String \cf3 a\cf0 )    \{\
\
		Map<String, Integer>  \cf3 map\cf0 = 
\f0\b \cf2 new
\f1\b0 \cf0  HashMap<>();\
\
		
\f0\b \cf2 for
\f1\b0 \cf0 (
\f0\b \cf2 int
\f1\b0 \cf0  \cf3 i\cf0 =0;\cf3 i\cf0 <\cf3 a\cf0 .length();\cf3 i\cf0 ++)\
		\{\
			
\f0\b \cf2 if
\f1\b0 \cf0 (\cf3 map\cf0 .containsKey(String.
\f2\i valueOf
\f1\i0 (\cf3 a\cf0 .charAt(\cf3 i\cf0 )))) \
			\{\
				
\f0\b \cf2 int
\f1\b0 \cf0  \cf3 val\cf0  = \cf3 map\cf0 .get(String.
\f2\i valueOf
\f1\i0 (\cf3 a\cf0 .charAt(\cf3 i\cf0 )));\
				\cf3 val\cf0 +=1;\
				\cf3 map\cf0 .put(String.
\f2\i valueOf
\f1\i0 (\cf3 a\cf0 .charAt(\cf3 i\cf0 )), \cf3 val\cf0 );\
			\}\
			
\f0\b \cf2 else
\f1\b0 \cf0  \{\
				\cf3 map\cf0 .put(String.
\f2\i valueOf
\f1\i0 (\cf3 a\cf0 .charAt(\cf3 i\cf0 )),1); 	\
			\}\
		\}\
		
\f0\b \cf2 return
\f1\b0 \cf0  \cf3 map\cf0 ;\
	\}\
\
\
	
\f0\b \cf2 static
\f1\b0 \cf0  
\f0\b \cf2 int
\f1\b0 \cf0  makeAnagram(String \cf3 a\cf0 , String \cf3 b\cf0 ) \{\
		
\f0\b \cf2 int
\f1\b0 \cf0  \cf3 deletions\cf0  = 0;\
\
		Map<String, Integer>  \cf3 map1\cf0 = 
\f0\b \cf2 new
\f1\b0 \cf0  HashMap<>();\
		Map<String, Integer>  \cf3 map2\cf0 = 
\f0\b \cf2 new
\f1\b0 \cf0  HashMap<>();\
\
		\cf3 map1\cf0  = 
\f2\i myStri
\f1\i0 (\cf3 a\cf0 );\
		\cf3 map2\cf0  = 
\f2\i myStri
\f1\i0 (\cf3 b\cf0 );\
\
		
\f0\b \cf2 for
\f1\b0 \cf0 (String \cf3 x\cf0 :\cf3 map1\cf0 .keySet())\
		\{\
			
\f0\b \cf2 if
\f1\b0 \cf0 (\cf3 map2\cf0 .containsKey(\cf3 x\cf0 ))\
			\{\
				\cf3 deletions\cf0  += Math.
\f2\i abs
\f1\i0 (\cf3 map2\cf0 .get(\cf3 x\cf0 )-\cf3 map1\cf0 .get(\cf3 x\cf0 ));\
\
			\} 
\f0\b \cf2 else
\f1\b0 \cf0  \{\
				\cf3 deletions\cf0  += \cf3 map1\cf0 .get(\cf3 x\cf0 );\
			\}\
		\}\
\
		
\f0\b \cf2 for
\f1\b0 \cf0 (String \cf3 x\cf0 :\cf3 map2\cf0 .keySet())\
		\{\
			
\f0\b \cf2 if
\f1\b0 \cf0 (!\cf3 map1\cf0 .containsKey(\cf3 x\cf0 ))\
			\{\
				\cf3 deletions\cf0  += \cf3 map2\cf0 .get(\cf3 x\cf0 );\
			\}\
		\}\
\
		
\f0\b \cf2 return
\f1\b0 \cf0  \cf3 deletions\cf0 ;\
	\}\
\
	
\f0\b \cf2 public
\f1\b0 \cf0  
\f0\b \cf2 static
\f1\b0 \cf0  
\f0\b \cf2 void
\f1\b0 \cf0  main(String[] \cf3 args\cf0 ) \{\
		String \cf3 a\cf0  = \cf4 "abcd"\cf0 ;\
		String \cf3 b\cf0  = \cf4 "abcdaae"\cf0 ;\
		Map<String, Integer>  \cf3 map1\cf0 = 
\f0\b \cf2 new
\f1\b0 \cf0  HashMap<>();\
		Map<String, Integer>  \cf3 map2\cf0 = 
\f0\b \cf2 new
\f1\b0 \cf0  HashMap<>();\
\
		\cf3 map1\cf0  = 
\f2\i myStri
\f1\i0 (\cf3 a\cf0 );\
		\cf3 map2\cf0  = 
\f2\i myStri
\f1\i0 (\cf3 b\cf0 );\
\
		System.
\f3\i\b \cf5 out
\f1\i0\b0 \cf0 .println(\cf3 map1\cf0 );\
		System.
\f3\i\b \cf5 out
\f1\i0\b0 \cf0 .println(\cf3 map2\cf0 );\
		\
		
\f0\b \cf2 int
\f1\b0 \cf0  \cf3 del\cf0  = 0;\
		\cf3 del\cf0 = 
\f2\i makeAnagram
\f1\i0 (\cf3 a\cf0 ,\cf3 b\cf0 );\
		System.
\f3\i\b \cf5 out
\f1\i0\b0 \cf0 .println(\cf3 del\cf0 );\
	\}\
\
	\cf6 //	public static ArrayList<String> myStr(String a)    \{\cf0 \
	\cf6 //\cf0 \
	\cf6 //		ArrayList<String> \ul stringlist\ulnone  = new ArrayList<>();\cf0 \
	\cf6 //\cf0 \
	\cf6 //		for(\ul int\ulnone  i=0;i<a.length();i++)\cf0 \
	\cf6 //		\{\cf0 \
	\cf6 //			stringlist.add(i,String.valueOf(a.charAt(i))); 	\cf0 \
	\cf6 //		\}\cf0 \
	\cf6 //		return \ul stringlist\ulnone ;\cf0 \
	\cf6 //	\}\cf0 \
\
\
\}\
}