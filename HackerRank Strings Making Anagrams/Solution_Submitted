import java.io.*;
import java.math.*;
import java.security.*;
import java.text.*;
import java.util.*;
import java.util.concurrent.*;
import java.util.regex.*;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.Map;

public class Solution {

        public static Map<String, Integer> myStri(String a)    {

        Map<String, Integer>  map= new HashMap<>();

        for(int i=0;i<a.length();i++)
        {
            if(map.containsKey(String.valueOf(a.charAt(i)))) 
            {
                int val = map.get(String.valueOf(a.charAt(i)));
                val+=1;
                map.put(String.valueOf(a.charAt(i)), val);
            }
            else {
                map.put(String.valueOf(a.charAt(i)),1);     
            }
        }
        return map;
    }


    static int makeAnagram(String a, String b) {
        int deletions = 0;

        Map<String, Integer>  map1= new HashMap<>();
        Map<String, Integer>  map2= new HashMap<>();

        map1 = myStri(a);
        map2 = myStri(b);

        for(String x:map1.keySet())
        {
            if(map2.containsKey(x))
            {
                deletions += Math.abs(map2.get(x)-map1.get(x));

            } else {
                deletions += map1.get(x);
            }
        }

        for(String x:map2.keySet())
        {
            if(!map1.containsKey(x))
            {
                deletions += map2.get(x);
            }
        }

        return deletions;
    }
    private static final Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) throws IOException {
        BufferedWriter bufferedWriter = new BufferedWriter(new FileWriter(System.getenv("OUTPUT_PATH")));

        String a = scanner.nextLine();

        String b = scanner.nextLine();

        int res = makeAnagram(a, b);

        bufferedWriter.write(String.valueOf(res));
        bufferedWriter.newLine();

        bufferedWriter.close();

        scanner.close();
    }
}

